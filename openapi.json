{
  "openapi": "3.0.3",
  "info": {
    "title": "Sales & Reservations API (Node)",
    "version": "0.1.0",
    "description": "API base for sales and reservations. Auth via API Key header `x-api-key`."
  },
  "servers": [{ "url": "http://localhost:3000/api" }],
  "paths": {
    "/health": {
      "get": {
        "summary": "Healthcheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": { "status": "ok", "uptime": 123.45 }
              }
            }
          }
        }
      }
    },
    "/v1/customers": {
      "get": {
        "summary": "List customers",
        "parameters": [
          { "in": "query", "name": "take", "schema": { "type": "integer" } },
          { "in": "query", "name": "skip", "schema": { "type": "integer" } },
          { "in": "query", "name": "q", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create customer",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "name"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "name": { "type": "string" },
                  "phone": { "type": "string" },
                  "notes": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/v1/products": {
      "get": {
        "summary": "List products",
        "parameters": [
          { "in": "query", "name": "take", "schema": { "type": "integer" } },
          { "in": "query", "name": "skip", "schema": { "type": "integer" } },
          { "in": "query", "name": "q", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create product",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["sku", "name", "priceCents"],
                "properties": {
                  "sku": { "type": "string" },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "priceCents": { "type": "integer" },
                  "active": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/v1/orders": {
      "get": {
        "summary": "List orders",
        "parameters": [
          {
            "in": "query",
            "name": "take",
            "schema": { "type": "integer", "minimum": 0, "maximum": 200 },
            "description": "Número de registros a devolver (máx 200).",
            "example": 50
          },
          {
            "in": "query",
            "name": "skip",
            "schema": { "type": "integer", "minimum": 0 },
            "description": "Desplazamiento para paginación.",
            "example": 0
          },
          {
            "in": "query",
            "name": "customerId",
            "schema": { "type": "string" },
            "description": "Filtra por ID de cliente."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["OPEN", "PAID", "CANCELLED", "REFUNDED"]
            },
            "description": "Estado del pedido."
          },

          {
            "in": "query",
            "name": "dateFrom",
            "schema": { "type": "string", "format": "date-time" },
            "description": "Filtra por createdAt >= dateFrom (ISO 8601).",
            "example": "2025-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "name": "dateTo",
            "schema": { "type": "string", "format": "date-time" },
            "description": "Filtra por createdAt <= dateTo (ISO 8601).",
            "example": "2025-12-31T23:59:59Z"
          },
          {
            "in": "query",
            "name": "updatedSince",
            "schema": { "type": "string", "format": "date-time" },
            "description": "Trae pedidos con updatedAt >= updatedSince (para refresco incremental).",
            "example": "2025-08-20T00:00:00Z"
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create order",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["customerId", "items"],
                "properties": {
                  "customerId": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["productId", "qty"],
                      "properties": {
                        "productId": { "type": "string" },
                        "qty": { "type": "integer", "minimum": 1 }
                      }
                    },
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },
    "/v1/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      },
      "patch": {
        "summary": "Update order status (PAID/CANCELLED)",
        "security": [{ "apiKey": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": { "type": "string", "enum": ["PAID", "CANCELLED"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated" },
          "404": { "description": "Order not found" },
          "409": { "description": "Invalid status transition" }
        }
      }
    },
    "/v1/reservations": {
      "get": {
        "summary": "List reservations",
        "parameters": [
          { "in": "query", "name": "take", "schema": { "type": "integer" } },
          { "in": "query", "name": "skip", "schema": { "type": "integer" } },
          {
            "in": "query",
            "name": "customerId",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "CONFIRMED", "CANCELLED", "NO_SHOW"]
            }
          },
          {
            "in": "query",
            "name": "dateFrom",
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "in": "query",
            "name": "dateTo",
            "schema": { "type": "string", "format": "date-time" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create reservation",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["customerId", "startAt", "endAt"],
                "properties": {
                  "customerId": { "type": "string" },
                  "startAt": { "type": "string", "format": "date-time" },
                  "endAt": { "type": "string", "format": "date-time" },
                  "partySize": { "type": "integer" },
                  "notes": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "409": { "description": "Overlap" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    }
  }
}
